<input id="address" type="text" class="input input-bordered input-sm w-full max-w-xs text-left mb-1" placeholder="東京駅">
<input type="button" class="btn btn-active btn-accent btn-sm text-white", value="検索" onclick="codeAddress()">
<div id='map' style="height: 500px; width: 380px" onclick="touchAddress()"></div>
</table>
<script>
//初期マップの設定
let map
//検索後のマップ作成
let geocoder
let Marker

function initMap(){
  geocoder = new google.maps.Geocoder()

  map = new google.maps.Map(document.getElementById('map'), {
    center:  {lat: 35.6803997, lng:139.7690174},  //東京
    zoom: 16,

  });
}

function touchAddress(){
  google.maps.event.addListener(map, 'click',
  function(event) {
    if (Marker){Marker.setMap(null)};
    Marker = new google.maps.Marker({
    position: event.latLng,
    draggable: true,
    map: map
    });
    // infotable(Marker.getPosition().lat(),
    // Marker.getPosition().lng(),map.getZoom());
    geocode();
    //マーカードラッグイベントの登録
    google.maps.event.addListener(Marker,'dragend',
    function(event) {
    infotable(Marker.getPosition().lat(),
    Marker.getPosition().lng(),map.getZoom());
    geocode();
    })
    //地図ズームチェンジイベントの登録
    google.maps.event.addListener(map, 'zoom_changed',
    function(event) {
    infotable(Marker.getPosition().lat(),
    Marker.getPosition().lng(),map.getZoom());
    })
  })
  //ジオコーディング
  function geocode(){  var geocoder = new google.maps.Geocoder();
    geocoder.geocode({ 'location': Marker.getPosition()},
      function(results, status) {
    if (status == google.maps.GeocoderStatus.OK && results[0]){
      document.getElementById('flower_address').value =
          results[0].formatted_address.replace(/^日本, /, '');
    }else{
      document.getElementById('flower_address').value =
        "Geocode 取得に失敗しました";
      alert("Geocode 取得に失敗しました reason: "
            + status);
    }
    });
  }
}

function codeAddress(){
  let inputAddress = document.getElementById('address').value;
  geocoder.geocode( { 'address': inputAddress}, function(results, status) {
    if (status == 'OK') {
        map.setCenter(results[0].geometry.location);
            } else {
              alert('該当する結果がありませんでした：' + status);
            }
          });
}

</script>
<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_CLOUD_API_KEY'] %>&callback=initMap" async defer></script>

<%= form_with model: flower, local: true do |f| %>
  <div class="form-control">
    <label class="label">
      <span class="label-text">住所</span>
    </label>
    <%= f.text_field :address, placeholder: "東京駅", class: "input w-96" %>
  </div>
  <div class="form-control">
    <label class="label">
      <span class="label-text">日付</span>
    </label>
    <%= f.datetime_field :datetime, class: "input w-96" %>
  </div>
  <div class="form-control">
    <label class="label">
      <span class="label-text">花の名前</span>
    </label>
    <%= f.text_field :name, placeholder: "ヒマワリ", class: "input w-96" %>
  </div>
  <div class="form-control">
    <label class="label">
      <span class="label-text">花の状態</span>
    </label>
    <div class="rating rating-lg">
      <%= f.radio_button :status, :bad, class: "mask mask-star-2 bg-orange-400" %>
      <%= f.radio_button :status, :rather_bad, class: "mask mask-star-2 bg-orange-400" %>
      <%= f.radio_button :status, :usually, class: "mask mask-star-2 bg-orange-400" %>
      <%= f.radio_button :status, :good, class: "mask mask-star-2 bg-orange-400" %>
      <%= f.radio_button :status, :beautiful, class: "mask mask-star-2 bg-orange-400" %>
    </div>
  </div>
  <div class="form-group">
    <label class="label">
      <span class="label-text">花の写真</span>
    </label>
    <%= f.file_field :flower_image, onchange: 'previewImage()', class: "form-control file-input file-input-bordered file-input-accent w-96" %>
    <%= f.hidden_field :flower_image_cache %>
    <%= image_tag flower.flower_image_url, size: '380x380', id: 'preview', class: "mt-5" %>
    <script>
      function previewImage() {
        const target = this.event.target;
        const file = target.files[0];
        const reader  = new FileReader();
        reader.onloadend = function () {
            const preview = document.querySelector("#preview")
            if(preview) {
                preview.src = reader.result;
            }
        }
        if (file) {
            reader.readAsDataURL(file);
        }
      }
    </script>
  </div>
  <%= f.submit "見つけた花を投稿する", class: "btn btn-active btn-accent text-white mt-5" %>
<% end %>
